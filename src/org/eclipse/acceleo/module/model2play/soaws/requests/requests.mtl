[comment encoding = UTF-8 /]
[**
 * The documentation of the module requests.
 */]

[module requests('http://www.obeonetwork.org/dsl/soa/2.0.0','http://www.obeonetwork.org/dsl/entity/2.0.0','http://www.obeonetwork.org/dsl/environment/2.0.0')]

[import org::eclipse::acceleo::module::model2play::soa::requests::requests/]
[comment : Variables "globales"/]

[query public get_api_path( any : OclAny ) : String = 
'/api/'
/]

[query public get_webservice_suffix( any : OclAny ) : String =
'WS'
/]

[query public get_soaws_folder( any : OclAny ) : String =
'app/controllers/rest/'
/]

[query public get_soaws_package( any : OclAny ) : String =
'controllers.rest'
/]

[query public get_wsutils_class( any : OclAny ) : String =
'WSUtils'
/]

[query public get_test_templates_folder( any : OclAny ) : String =
'app/views/rest_tests/'
/]

[query public get_test_template_package( any : OclAny ) : String =
'views.html.rest_tests'
/]

[query public get_test_template_filename( anInterface : Interface ) : String =
name + '_tests' + '.scala.html'
/]


[query public get_managed_input( anOperation : Operation ) : Parameter =
anOperation.input->select(is_managed_entity())->first()
/]

[query public is_managed_entity( aParameter : Parameter ) : Boolean =
aParameter.eContainer(Operation).get_operation_interface().get_managed_entity_name().equalsIgnoreCase( 
	aParameter.type.name
)
/]


[query public get_input_parameters_except_entity( anOperation : Operation ) : Set(Parameter) =
	anOperation.input->select(not is_managed_entity())
/]

[query public is_required( aParameter : Parameter ) : Boolean =
aParameter.lower.toString() <> '0'
/]

[query public get_required_parameters_except_entity( anOperation : Operation ) : OrderedSet(Parameter) =
	get_input_parameters_except_entity()->select(is_required())->asOrderedSet()
/]

[query public get_operation_interface( anOperation : Operation ) : Interface = 
	anOperation.eContainer(Interface)
/]

[query public get_webservice_name( anInterface : Interface ) : String =
	anInterface.name + get_webservice_suffix()
/]

[query public get_webservice_name( anOperation : Operation ) : String =
	get_operation_interface().get_webservice_name()
/]

[comment : Conventions de nommage /]

