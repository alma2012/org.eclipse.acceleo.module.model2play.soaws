[comment encoding = UTF-8 /]
[**
 * The documentation of the module requests.
 */]

[module requests('http://www.obeonetwork.org/dsl/soa/2.0.0','http://www.obeonetwork.org/dsl/entity/2.0.0','http://www.obeonetwork.org/dsl/environment/2.0.0')]

[comment : Variables "globales"/]

[query public get_webservice_suffix() : String =
'WS'
/]

[query public get_soaws_folder() : String =
'app/controllers/rest'
/]


[query public get_soaws_package() : String =
'controllers.rest'
/]

[query public get_wsutils_class() : String =
'WSUtils'
/]

[query public get_operation_type( anOperation : Operation ) : String =
anOperation.getAnnotation('entity_manager')._body
/]


[query public get_managed_input( anOperation : Operation ) : Parameter =
anOperation.input->select(is_managed_entity())->first()
/]

[query public is_managed_entity( aParameter : Parameter ) : Boolean =
aParameter.eContainer(Operation).get_operation_interface().get_managed_entity_name().equalsIgnoreCase( 
	aParameter.type.name
)
/]


[query public get_input_parameters_except_entity( anOperation : Operation ) : Set(Parameter) =
	anOperation.input->select(not is_managed_entity())
/]

[query public get_required_parameters_except_entity( anOperation : Operation ) : OrderedSet(Parameter) =
	get_input_parameters_except_entity()->select(lower.toString() <> '0')->asOrderedSet()
/]

[query public get_operation_interface( anOperation : Operation ) : Interface = 
	anOperation.eContainer(Interface)
/]

[query public get_managed_entity_name( iface : Interface ) : String = 
iface.getAnnotation('entity_manager')._body
/] 

[query public get_managed_entity_name( anOperation : Operation ) : String = 
anOperation.eContainer(Interface).get_managed_entity_name()
/] 

[query public is_entity_manager_interface( iface : Interface ) : Boolean = 
not getAnnotation(iface,'entity_manager')->isEmpty()
/] 

[query public getAnnotation(object : ObeoDSMObject, key : String) : Annotation =
object.metadatas.metadatas->filter(Annotation)->select(title = key)->first()
/]

[comment : Conventions de nommage /]
[query public get_implementation_name( aService : Service ) : String = 
aService.name + 'Impl'
/]

[query public apply_operation_template( anOperation : Operation ) : OclAny =
invoke('org.eclipse.acceleo.module.model2play.soaws.common.operationMethod','generate_for_'+anOperation.getAnnotation('entity_manager')._body, Sequence{anOperation} )
/]
